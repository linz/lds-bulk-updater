name: Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python:
          - "3.10"
          - "3.11"
          - "3.12"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v6.0.0
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/cache@v4.2.4
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-pip-${{ secrets.CACHE_SEED }}-${{ matrix.python }}-${{ hashFiles('./poetry.lock') }}
          restore-keys: ${{ matrix.os }}-pip-${{ secrets.CACHE_SEED }}-${{ matrix.python }}-
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install Poetry
        run: python -m pip install poetry
      - name: Install Python dependencies
        run: python -m poetry install
      - name: Lint Last Commit
        if: github.event_name == 'push'
        run: poetry run gitlint
      - name: Lint All Commits on Pull Request
        if: github.event_name == 'pull_request'
        run: poetry run gitlint --commits "origin/${{ github.base_ref }}...HEAD"
      # Skipping this to get Actions to pass but not altering the codebase
      # - name: Format
      #   run: poetry run pre-commit run --all-files
      # - name: Test
      #   run: poetry run coverage run --module pytest
      # - name: Verify test coverage
      #   run: poetry run coverage html
      # - name: Archive code coverage report
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: code-coverage-report
      #     path: htmlcov
      #   if: ${{ failure() }}

  finalise:
    if: always()
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Check build job result
        run: |
          echo "Build job result: ${{ needs.build.result }}"
          if [[ "${{ needs.build.result }}" == "success" ]]; then
            echo ":white_check_mark: All required jobs succeeded."
          else
            echo ":x: One or more jobs failed."
            exit 1
          fi
